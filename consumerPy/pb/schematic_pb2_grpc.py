# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from pb import schematic_pb2 as pb_dot_schematic__pb2


class SchematicStub(object):
  """The schemantic layes maintains all versions of schemas for all topics
  Schema registration allows evolution of messages

  Requesting schema allows programs to decode and use unknow messages dynamically
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.RegisterSchema = channel.unary_unary(
        '/pb.Schematic/RegisterSchema',
        request_serializer=pb_dot_schematic__pb2.Schema.SerializeToString,
        response_deserializer=pb_dot_schematic__pb2.EmptyResponse.FromString,
        )
    self.GetSchema = channel.unary_unary(
        '/pb.Schematic/GetSchema',
        request_serializer=pb_dot_schematic__pb2.SchemaReq.SerializeToString,
        response_deserializer=pb_dot_schematic__pb2.Schema.FromString,
        )


class SchematicServicer(object):
  """The schemantic layes maintains all versions of schemas for all topics
  Schema registration allows evolution of messages

  Requesting schema allows programs to decode and use unknow messages dynamically
  """

  def RegisterSchema(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetSchema(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SchematicServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'RegisterSchema': grpc.unary_unary_rpc_method_handler(
          servicer.RegisterSchema,
          request_deserializer=pb_dot_schematic__pb2.Schema.FromString,
          response_serializer=pb_dot_schematic__pb2.EmptyResponse.SerializeToString,
      ),
      'GetSchema': grpc.unary_unary_rpc_method_handler(
          servicer.GetSchema,
          request_deserializer=pb_dot_schematic__pb2.SchemaReq.FromString,
          response_serializer=pb_dot_schematic__pb2.Schema.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'pb.Schematic', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
